openapi: 3.1.0
info:
    title: Sogexia Hiring Test API - OpenAPI 3.0
    description: Ce projet est une Api à utiliser lors du test de recrutement. Il propose une APi autour du concept de Player et de Game. Une authentification est nécessaire et décrite dans cette documentation. 
    license:
            name: Proprietary
    version: "1"
servers:
    - url: https://localhost/api/v1/
tags:
    - name: players
      description: Everything about Players
    - name: games
      description: Everything about Games
paths:
    /ping:
        get:
            description: Test your installation by calling this route 
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                items:
                                    properties:
                                        ping:
                                            type: string
                                        ack:
                                            type: string
    /players:
        get:
            tags:
                - players
            summary: Get list of players
            description: Get list of players
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Players'
        post:
            tags:
                - players
            summary: Add new player
            description: Add new player
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PlayerPayload'
                required: true
            responses:
                '200':
                    description: Already created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Player'
                '400':
                    description: Invalid input
                '500':
                    description: Unexpected error
    /games:
        get:
            tags:
                - games
            summary: Get list of games
            description: Get list of games
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Games'
        post:
            tags:
                - games
            summary: Add new game score
            description: Add new game score with related players and their score
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GamePayload'
                required: true
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Game'
                    
                '400':
                    description: Invalid input
                '500':
                    description: Unexpected error

components:
    schemas:
        Players:
            type: array
            description: Players
            items:
                $ref: '#/components/schemas/Player'
        Player:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
        PlayerPayload:
            type: object
            properties: 
                name: 
                    type: string
        Games:
            type: array
            description: Games
            $ref: '#/components/schemas/Game'            
        Game:
            type: object
            properties:
                id:
                    type: integer
                score:
                    $ref: '#/components/schemas/Score'
        Score:
            type: object
            properties: 
                playerId: 
                    type: integer
                score:
                    type: integer
        GamePayload:
            type: array
            $ref: '#/components/schemas/Score'
                
    securitySchemes:
        apiKeyAuth:
            type: apiKey
            in: header
            name: Authorization
            description: The content of the Authorization header must be "Apikey YOUR_API_KEY"
            
security:
    - apiKey: []
